@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier) ?? "anonymous";
    var notifications = await notificationService.GetNotificationsAsync(userId, 7);
    notifications = notifications.OrderByDescending(n => n.CreatedAt);
}



<div id="notification-container">
    <button id="notification-dropdown-button" type="button" data-type="dropdown" data-target="#notification-dropdown" class="btn-notification fa-duotone fa-solid fa-bell" style="--fa-primary-opacity: 0.4; --fa-secondary-opacity: 1;">
        @if (notifications.Any()) {
            <div class="dot dot-red fa-solid fa-circle"></div>
        }
    </button>
    <div id="notification-dropdown" class="dropdown">
        <div class="dropdown-header">
            <span>Notifications</span>
            <div class="badge badge-red notification-number">@notifications.Count()</div>
        </div>

        <div class="divider"></div>

        <div class="notifications">

            @foreach (var notification in notifications)
            {
                var imageClass = notification.NotificationTypeId == 2 ? "project-image-notification" : "user-image";
                <div class="notification">
                    <div class="@imageClass">
                        <img class="@imageClass" src="@notification.Icon" alt="Alternate Text" />
                    </div>
                    <div class="message">@notification.Message</div>
                    <div class="time" data-created="@notification.CreatedAt.ToString("s")">@notification.CreatedAt</div>
                    <button class="btn-close" onclick="dissmissNotification('@notification.Id')"></button>
                </div>
            }

        </div>
    </div>
</div>

@*  Jag skrev denna koden med Hans video (Notifieringssystem med SignalR) *@
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")
        .build();

    connection.on("AllReceiveNotification", function(allNotification) {
        const notifications = document.querySelector('.notifications')

        const item = document.createElement('div')
        item.className = 'notification'
        item.setAttribute('data-id', allNotification.id)
        item.innerHTML = 
        `
            <div class="user-image">
                <img class="user-image" src="${allNotification.icon}" alt="Alternate Text" />
            </div>
            <span class="message">${allNotification.message}</span>
            <span class="time" data-created="${new Date(allNotification.created).toISOString()}">${allNotification.created}</span>
            <button class="btn-close" onclick="dissmissNotification('${allNotification.id}')"></button>
        `

        notifications.insertBefore(item, notifications.firstChild)
        updateRelativeTimes()
        updateNotificationCount()
    })

    connection.on("NotificationDismissed", function(notificationId) {
        const element = document.querySelector(`.notification[data-id="${notificationId}"]`)
        if (element) {
            element.remove()
            updateNotificationCount()
        }
    })

    connection.start().catch(error => console.error(error))

    async function dissmissNotification(notificationId) {
        try {
            const res = await fetch(`/api/notifications/dismiss/${notificationId}`, { method: 'POST' })
            if (res.ok) 
            { 
                 removeNotification(notificationId)
            }
            else {
                console.error('Error dismissing notification')
            }
        }
        catch {
            console.error('Error removing notification', error);
        }
    }

    function removeNotification(notificationId) {
        const element = document.querySelector(`.notification[data-id="${notificationId}"]`)
        if (element) {
            element.remove()
            updateNotificationCount()
        }
    }

    function updateNotificationCount() {
        const notifications = document.querySelector('.notifications')
        const notificationNumber = document.querySelector('.notification-number')
        const notificationDropdownButton = document.querySelector('#notification-dropdown-button')
        const count = notifications.querySelectorAll('.notification').length

        if (notificationNumber) {
            notificationNumber.textContent = count
        }

        let dot = notificationDropdownButton.querySelectorAll('.dot.dot-red')
        if (count > 0 && !dot) {
            dot = document.createElement('div')
            dot.className = 'dot dot-red'
            notificationDropdownButton.appendChild(dot)
        }
        
        if (count === 0 && dot) {
            dot.remove()
        }
        
    }
</script>
